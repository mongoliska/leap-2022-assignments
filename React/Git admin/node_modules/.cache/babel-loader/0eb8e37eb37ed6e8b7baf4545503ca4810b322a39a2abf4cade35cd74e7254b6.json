{"ast":null,"code":"var _jsxFileName = \"/Users/evening/Desktop/Leap Green - Nara/React/Git admin/src/pages/Articles.jsx\",\n  _s = $RefreshSig$();\nimport PostList from '../components/Blogs/PostList';\nimport Heading from '../components/Heading';\nimport DynamicModal from '../../src/components/utils/DynamicModal';\nimport PostCreate from '../../src/components/Blogs/PostCreate';\nimport { useEffect, useState } from 'react';\nimport { toast } from 'react-toastify';\nimport PostEdit from '../components/Blogs/PostEdit';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Articles() {\n  _s();\n  const [modalShow, setModalShow] = useState(false);\n  const [articles, setArticles] = useState([]);\n  const [modalContent, setModalContent] = useState();\n  useEffect(() => {\n    fetch('https://demo-api-one.vercel.app/api/articles').then(res => res.json()).then(data => {\n      setArticles(data.body);\n    }).catch(err => {\n      console.log(err);\n      toast.error('aldaa garlaa');\n    });\n  }, []);\n  const afterSubmit = article => {\n    modalClose();\n    setArticles([...articles, article]);\n  };\n  const modalClose = () => {\n    setModalShow(false);\n  };\n  const showCreateModal = () => {\n    setModalContent( /*#__PURE__*/_jsxDEV(PostCreate, {\n      afterSubmit: afterSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 21\n    }, this));\n    setModalShow(true);\n  };\n  const afterEdit = article => {\n    modalClose();\n    const newArticles = [...articles];\n    newArticles.map(art => {\n      if (art.id === article.id) {\n        return article;\n      }\n      return art;\n    });\n    setArticles(newArticles);\n  };\n  const showEditModal = article => {\n    setModalContent( /*#__PURE__*/_jsxDEV(PostEdit, {\n      article: article,\n      afterEdit: afterEdit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }, this));\n    setModalShow(true);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-sm body-container\",\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        title: \"Blog posts\",\n        handleShow: showCreateModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PostList, {\n        items: articles,\n        onEdit: showEditModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DynamicModal, {\n      show: modalShow,\n      handleClose: modalClose,\n      title: \"Create post\",\n      content: modalContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Articles, \"4x/ObKtYeM7NfDDDTxaI1QqLwLA=\");\n_c = Articles;\nvar _c;\n$RefreshReg$(_c, \"Articles\");","map":{"version":3,"names":["PostList","Heading","DynamicModal","PostCreate","useEffect","useState","toast","PostEdit","Articles","modalShow","setModalShow","articles","setArticles","modalContent","setModalContent","fetch","then","res","json","data","body","catch","err","console","log","error","afterSubmit","article","modalClose","showCreateModal","afterEdit","newArticles","map","art","id","showEditModal"],"sources":["/Users/evening/Desktop/Leap Green - Nara/React/Git admin/src/pages/Articles.jsx"],"sourcesContent":["import PostList from '../components/Blogs/PostList';\nimport Heading from '../components/Heading';\nimport DynamicModal from '../../src/components/utils/DynamicModal';\nimport PostCreate from '../../src/components/Blogs/PostCreate';\nimport { useEffect, useState } from 'react';\nimport { toast } from 'react-toastify'\nimport PostEdit from '../components/Blogs/PostEdit';\n\nexport default function Articles() {\n  const [modalShow, setModalShow] = useState(false);\n  const [articles, setArticles] = useState([]);\n  const [modalContent, setModalContent] = useState();\n\n\n\n  useEffect(() => {\n    fetch('https://demo-api-one.vercel.app/api/articles')\n      .then((res) => res.json())\n      .then((data) => {\n        setArticles(data.body);\n      })\n      .catch((err) => {\n        console.log(err);\n        toast.error('aldaa garlaa')\n      });\n  }, [])\n\n  const afterSubmit = (article) => {\n    modalClose();\n    setArticles([...articles, article]);\n  };\n  const modalClose = () => {\n    setModalShow(false);\n  };\n  const showCreateModal = () => {\n    setModalContent(<PostCreate afterSubmit={afterSubmit} />);\n    setModalShow(true);\n  };\n\n  const afterEdit = (article) => {\n    modalClose();\n    const newArticles = [...articles];\n    newArticles.map((art) => {\n      if (art.id === article.id) {\n        return article;\n      }\n      return art;\n    });\n    setArticles(newArticles);\n  };\n\n  const showEditModal = (article) => {\n    setModalContent(<PostEdit article={article} afterEdit={afterEdit} />);\n    setModalShow(true);\n  };\n  return (\n    <>\n      <div className=\"container-sm body-container\">\n        <Heading title=\"Blog posts\" handleShow={showCreateModal} />\n        <PostList items={articles} onEdit={showEditModal} />\n      </div>\n      <DynamicModal show={modalShow} handleClose={modalClose} title=\"Create post\" content={modalContent} />\n    </>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,QAAQ,MAAM,8BAA8B;AACnD,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,OAAOC,YAAY,MAAM,yCAAyC;AAClE,OAAOC,UAAU,MAAM,uCAAuC;AAC9D,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,KAAK,QAAQ,gBAAgB;AACtC,OAAOC,QAAQ,MAAM,8BAA8B;AAAC;AAAA;AAEpD,eAAe,SAASC,QAAQ,GAAG;EAAA;EACjC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGL,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACM,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACQ,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,EAAE;EAIlDD,SAAS,CAAC,MAAM;IACdW,KAAK,CAAC,8CAA8C,CAAC,CAClDC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,EAAE,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAK;MACdP,WAAW,CAACO,IAAI,CAACC,IAAI,CAAC;IACxB,CAAC,CAAC,CACDC,KAAK,CAAEC,GAAG,IAAK;MACdC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAChBhB,KAAK,CAACmB,KAAK,CAAC,cAAc,CAAC;IAC7B,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,WAAW,GAAIC,OAAO,IAAK;IAC/BC,UAAU,EAAE;IACZhB,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAEgB,OAAO,CAAC,CAAC;EACrC,CAAC;EACD,MAAMC,UAAU,GAAG,MAAM;IACvBlB,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;EACD,MAAMmB,eAAe,GAAG,MAAM;IAC5Bf,eAAe,eAAC,QAAC,UAAU;MAAC,WAAW,EAAEY;IAAY;MAAA;MAAA;MAAA;IAAA,QAAG,CAAC;IACzDhB,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC;EAED,MAAMoB,SAAS,GAAIH,OAAO,IAAK;IAC7BC,UAAU,EAAE;IACZ,MAAMG,WAAW,GAAG,CAAC,GAAGpB,QAAQ,CAAC;IACjCoB,WAAW,CAACC,GAAG,CAAEC,GAAG,IAAK;MACvB,IAAIA,GAAG,CAACC,EAAE,KAAKP,OAAO,CAACO,EAAE,EAAE;QACzB,OAAOP,OAAO;MAChB;MACA,OAAOM,GAAG;IACZ,CAAC,CAAC;IACFrB,WAAW,CAACmB,WAAW,CAAC;EAC1B,CAAC;EAED,MAAMI,aAAa,GAAIR,OAAO,IAAK;IACjCb,eAAe,eAAC,QAAC,QAAQ;MAAC,OAAO,EAAEa,OAAQ;MAAC,SAAS,EAAEG;IAAU;MAAA;MAAA;MAAA;IAAA,QAAG,CAAC;IACrEpB,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC;EACD,oBACE;IAAA,wBACE;MAAK,SAAS,EAAC,6BAA6B;MAAA,wBAC1C,QAAC,OAAO;QAAC,KAAK,EAAC,YAAY;QAAC,UAAU,EAAEmB;MAAgB;QAAA;QAAA;QAAA;MAAA,QAAG,eAC3D,QAAC,QAAQ;QAAC,KAAK,EAAElB,QAAS;QAAC,MAAM,EAAEwB;MAAc;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA,QAChD,eACN,QAAC,YAAY;MAAC,IAAI,EAAE1B,SAAU;MAAC,WAAW,EAAEmB,UAAW;MAAC,KAAK,EAAC,aAAa;MAAC,OAAO,EAAEf;IAAa;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA,gBACpG;AAEP;AAAC,GAxDuBL,QAAQ;AAAA,KAARA,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}