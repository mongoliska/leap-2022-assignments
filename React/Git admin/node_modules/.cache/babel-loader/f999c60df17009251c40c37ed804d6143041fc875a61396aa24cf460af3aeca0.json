{"ast":null,"code":"var _jsxFileName = \"/Users/evening/Desktop/Leap Green - Nara/React/Git admin/src/pages/Categories.jsx\",\n  _s = $RefreshSig$();\nimport Heading from '../components/Heading';\nimport { useEffect, useState } from 'react';\nimport { toast } from 'react-toastify';\nimport CategoryList from '../components/Categories/CategoryList';\nimport CategoryCreate from '../components/Categories/CategoryCreate';\nimport DynamicModal from '../components/utils/DynamicModal';\nimport CategoryEdit from '../components/Categories/CategoryEdit';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Categories() {\n  _s();\n  const [modalShow, setModalShow] = useState(false);\n  const [categories, setCategories] = useState([]);\n  const [modalContent, setModalContent] = useState();\n  useEffect(() => {\n    axios.get('http://localhost:8000/categories').then(res => res.json()).then(data => {\n      setCategories(res.data);\n    }).catch(err => {\n      console.log(err);\n      toast.error('aldaa garlaa');\n    });\n  }, []);\n  const afterSubmit = category => {\n    modalClose();\n    setCategories([...categories, category]);\n  };\n  const modalClose = () => {\n    setModalShow(false);\n  };\n  const showCreateModal = () => {\n    setModalContent( /*#__PURE__*/_jsxDEV(CategoryCreate, {\n      afterSubmit: afterSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 25\n    }, this));\n    setModalShow(true);\n  };\n  const afterEdit = category => {\n    modalClose();\n    const newCategories = [...categories];\n    newCategories.map(cat => {\n      if (cat.id === category.id) {\n        return category;\n      }\n      return cat;\n    });\n    setCategories(newCategories);\n  };\n  const showEditModal = category => {\n    setModalContent( /*#__PURE__*/_jsxDEV(CategoryEdit, {\n      category: category,\n      afterEdit: afterEdit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 25\n    }, this));\n    setModalShow(true);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-sm body-container\",\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        title: \"Categories\",\n        handleShow: showCreateModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(CategoryList, {\n        items: categories,\n        onEdit: showEditModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(DynamicModal, {\n      show: modalShow,\n      handleClose: modalClose,\n      title: \"Create Category\",\n      content: modalContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(Categories, \"2hJre21UaiCYcr0rMw7dRX3owzE=\");\n_c = Categories;\nvar _c;\n$RefreshReg$(_c, \"Categories\");","map":{"version":3,"names":["Heading","useEffect","useState","toast","CategoryList","CategoryCreate","DynamicModal","CategoryEdit","axios","Categories","modalShow","setModalShow","categories","setCategories","modalContent","setModalContent","get","then","res","json","data","catch","err","console","log","error","afterSubmit","category","modalClose","showCreateModal","afterEdit","newCategories","map","cat","id","showEditModal"],"sources":["/Users/evening/Desktop/Leap Green - Nara/React/Git admin/src/pages/Categories.jsx"],"sourcesContent":["import Heading from '../components/Heading';\nimport { useEffect, useState } from 'react'\nimport { toast } from 'react-toastify'\nimport CategoryList from '../components/Categories/CategoryList'\nimport CategoryCreate from '../components/Categories/CategoryCreate'\nimport DynamicModal from '../components/utils/DynamicModal'\nimport CategoryEdit from '../components/Categories/CategoryEdit';\nimport axios from 'axios';\n\n\nexport default function Categories() {\n    const [modalShow, setModalShow] = useState(false);\n    const [categories, setCategories] = useState([]);\n    const [modalContent, setModalContent] = useState();\n\n\n\n    useEffect(() => {\n        axios\n        .get('http://localhost:8000/categories')\n            .then((res) => res.json())\n            .then((data) => {\n                setCategories(res.data);\n            })\n            .catch((err) => {\n                console.log(err);\n                toast.error('aldaa garlaa')\n            });\n    }, [])\n\n    const afterSubmit = (category) => {\n        modalClose();\n        setCategories([...categories, category]);\n    };\n    const modalClose = () => {\n        setModalShow(false);\n    };\n    const showCreateModal = () => {\n        setModalContent(<CategoryCreate afterSubmit={afterSubmit} />);\n        setModalShow(true);\n    };\n\n    const afterEdit = (category) => {\n        modalClose();\n        const newCategories = [...categories];\n        newCategories.map((cat) => {\n            if (cat.id === category.id) {\n                return category;\n            }\n            return cat;\n        });\n        setCategories(newCategories);\n    };\n\n    const showEditModal = (category) => {\n        setModalContent(<CategoryEdit category={category} afterEdit={afterEdit} />);\n        setModalShow(true);\n    };\n    return (<>\n        <div className=\"container-sm body-container\">\n            <Heading title=\"Categories\" handleShow={showCreateModal} />\n            <CategoryList items={categories} onEdit={showEditModal} />\n        </div>\n        <DynamicModal show={modalShow} handleClose={modalClose} title=\"Create Category\" content={modalContent} />\n    </>\n    );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}